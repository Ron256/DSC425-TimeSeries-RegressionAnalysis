# load the necessary packages
library(dplyr)
library(fBasics)
library(ggplot2)
#library(ggfortify)
library(forecast)
#
library(forecast)
library(fGarch)
library(rugarch)
library(tseries)
library(fUnitRoots)
library(lmtest)
library(fpp3)
library(TSA)
library(astsa)
library(dynlm)
library(vars)
################################################################################
#
# load the data set
################################################################################
# set working directory
# setwd("C:/Users/rejalu1/OneDrive - Henry Ford Health System/DSC425/GroupProject")
setwd("C:/Users/REJALU/OneDrive - DePaul University/DSC425/GroupProject")
source("eacf.R")
source("Backtest.R")
metroIS = read.csv("Metro_Interstate_Traffic_Volume.csv")
count(metroIS)
head(metroIS, 1200)
tail(metroIS)
# checking for null values
colSums(is.na(metroIS))
# check the datatype of the date field
class(metroIS$date_time)
# convert the date_time to the date class object
metroIS$tDate_time <- as.POSIXct(metroIS$date_time, TZ=Sys.timezone())
class(metroIS$tDate_time)
range(metroIS$tDate_time)
metroIS %>% dplyr::select(holiday) %>% dplyr::distinct()
################################################################################
# Data processing
#################################################################################
# Checking for duplicates:
metroIS_nodups <-
metroIS %>%
distinct() # remove duplicate rows based on all columns.
# holiday when  x == 'None then False else True
# derive the weekly dates
metroIS_nodups <- metroIS_nodups %>%  mutate(weekdate = as.Date(cut(tDate_time, "week"), "%Y-%m-%d"),
holiday_type= case_when(
holiday == "None" ~ FALSE,
holiday != "None" ~ TRUE)
)
head(metroIS_nodups)
metroIS_nodups %>% dplyr::filter(holiday_type == FALSE) %>% summarise(n=n()) # 48126
metroIS_nodups %>% dplyr::filter(holiday_type == TRUE) %>% summarise(n=n()) # 61
# qa
# check if the function above works
#metroIS_nodups %>% dplyr::select(holiday, holiday_type) %>% filter(holiday != "None")
metroIS_nodups %>% dplyr::filter(holiday != "None") %>%
dplyr::select(holiday, holiday_type)
# 2016-12-06 18:00:00, light snow, 90
###############################################################################################################
# Using the separate function from the tidyr package
metroIS_monthly <- tidyr::separate(metroIS_nodups, date_time, c("date", "time"), sep = " ")
monthly_metroIS_traffic <- tidyr::separate(metroIS_monthly, date, c("year", "month", "day"), sep = "-")
dev.off()
